/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.views;

import erp.controllers.QuotationController;
import erp.entities.Master;
import erp.entities.Quotation;
import erp.models.MasterComboBoxModel;
import erp.models.QuotationTableModel;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Timestamp;
import java.util.Date;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableModel;
import security.entities.User;
import security.entities.UserRight;

/**
 *
 * @author lespinoza
 */
public class QuotationView extends javax.swing.JPanel {
    private QuotationController controller;

    /**
     * Creates new form CustomerView2
     * @param user
     * @param right
     * @param itemKey
     * @param subItemKey
     */
    public QuotationView(User user, UserRight right, Long itemKey, Long subItemKey) {
        initComponents();
        localInit(user, right, itemKey, subItemKey);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtLeadTime = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtAddlCost = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtVendorCode = new javax.swing.JTextField();
        dtpFrom = new com.toedter.calendar.JDateChooser();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        dtpTo = new com.toedter.calendar.JDateChooser();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtNotes = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        cmbCategory = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        cmbCode = new javax.swing.JComboBox();
        txtDescription = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tblTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(tblTable);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Id:");

        txtId.setEnabled(false);

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Lead Time:");

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Addl. Cost:");

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Vendor Code:");

        dtpFrom.setDateFormatString("MM/dd/yyyy");

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("From:");

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("To:");

        dtpTo.setDateFormatString("MM/dd/yyyy");

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("Notes:");

        txtNotes.setColumns(20);
        txtNotes.setRows(5);
        jScrollPane2.setViewportView(txtNotes);

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Category:");

        cmbCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("Internal Code:");

        cmbCode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtDescription.setEditable(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescription)
                            .addComponent(cmbCode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVendorCode))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(dtpFrom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtLeadTime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dtpTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAddlCost)))))
                .addContainerGap())
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel16, jLabel17, jLabel18, jLabel19, jLabel20, jLabel21, jLabel22, jLabel23, jLabel24});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVendorCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLeadTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(txtAddlCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dtpFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtpTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {dtpTo, jLabel23});

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {dtpFrom, jLabel22});

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmbCategory, jLabel16, jLabel20, txtId});

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnNew.setText("New");

        btnEdit.setText("Edit");

        btnDelete.setText("Delete");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNew)
                .addGap(18, 18, 18)
                .addComponent(btnEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDelete)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNew;
    private javax.swing.JComboBox cmbCategory;
    private javax.swing.JComboBox cmbCode;
    private com.toedter.calendar.JDateChooser dtpFrom;
    private com.toedter.calendar.JDateChooser dtpTo;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblTable;
    private javax.swing.JTextField txtAddlCost;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtLeadTime;
    private javax.swing.JTextArea txtNotes;
    private javax.swing.JTextField txtVendorCode;
    // End of variables declaration//GEN-END:variables


    private void localInit(User user, UserRight right, Long itemKey, Long subItemKey) {
                
        this.controller = new QuotationController(this, user, right, itemKey, subItemKey);

        btnNew.setActionCommand("New");
        btnNew.addActionListener(this.controller);
        btnEdit.setActionCommand("Edit");
        btnEdit.addActionListener(this.controller);
        btnDelete.setActionCommand("Delete");
        btnDelete.addActionListener(this.controller);
        
        tblTable.getSelectionModel().addListSelectionListener(this.controller);
        tblTable.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        cmbCategory.setActionCommand("Category");
        cmbCategory.addActionListener(this.controller);
        cmbCode.setActionCommand("Component");
        cmbCode.addActionListener(this.controller);
        cmbCategory.setModel(new MasterComboBoxModel(1));   //  type=0 : products categories, type = 1: submaterial categories        

        txtVendorCode.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (txtVendorCode.getText().length() >= 20 ) // limit to 20 characters
                    e.consume();
            }
        });
        txtLeadTime.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (txtLeadTime.getText().length() >= 20 ) // limit to 20 characters
                    e.consume();
            }
        });
        txtAddlCost.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (txtAddlCost.getText().length() >= 20 ) // limit to 20 characters
                    e.consume();
            }
        });
        
        setNormalScenario();     
        controller.loadData();
    }
    
    public void setNormalScenario(){
        tblTable.setEnabled(true);
        cmbCategory.setEnabled(false);
        cmbCode.setEnabled(false);
        txtDescription.setEnabled(false);
        txtVendorCode.setEnabled(false);
        txtLeadTime.setEnabled(false);
        txtAddlCost.setEnabled(false);
        dtpFrom.setEnabled(false);
        dtpTo.setEnabled(false);
        txtNotes.setEnabled(false);

        btnNew.setEnabled(controller.getRight().getIsCreated());
        if (tblTable.getModel().getRowCount() > 0) {
            btnEdit.setEnabled(controller.getRight().getIsUpdated());
            btnDelete.setEnabled(controller.getRight().getIsDeleted());
        } else {
            btnEdit.setEnabled(false);
            btnDelete.setEnabled(false);            
        }
        
        btnNew.setText("New");
        btnEdit.setText("Edit");
        
        controller.setViewState(0);
    }

    public void setNewScenario(){
        tblTable.setEnabled(false);
        
        cmbCategory.setEnabled(true);
        cmbCode.setEnabled(true);
        txtDescription.setEnabled(true);
        txtVendorCode.setEnabled(true);
        txtLeadTime.setEnabled(true);
        txtAddlCost.setEnabled(true);
        dtpFrom.setEnabled(true);
        dtpTo.setEnabled(true);
        txtNotes.setEnabled(true); 
        
        btnNew.setEnabled(true);
        btnEdit.setEnabled(true);
        btnDelete.setEnabled(false);
        
        btnNew.setText("Save");
        btnEdit.setText("Cancel");
        
        clearFields();
        controller.setViewState(1);
    }
    
    public void setEditScenario(){
        tblTable.setEnabled(false);

        cmbCategory.setEnabled(false);
        cmbCode.setEnabled(false);
        txtVendorCode.setEnabled(true);
        txtLeadTime.setEnabled(true);
        txtAddlCost.setEnabled(true);
        dtpFrom.setEnabled(true);
        dtpTo.setEnabled(true);
        txtNotes.setEnabled(true);
        
        btnNew.setEnabled(true);
        btnEdit.setEnabled(true);
        btnDelete.setEnabled(false);
        
        btnNew.setText("Save");
        btnEdit.setText("Cancel");
        
        controller.setViewState(2);
    }
    
    public void clearFields() {
        txtId.setText("");
        txtVendorCode.setText("");
        txtLeadTime.setText("15");
        txtAddlCost.setText("0.0");
        dtpFrom.setDate(new Date());
        dtpTo.setDate(new Date());
        dtpTo.setEnabled(true);
        txtNotes.setText("");
    }

    public void loadDetail(){
        if (tblTable.getSelectedRow() != -1){
            int row = tblTable.getSelectedRow();
            TableModel model = tblTable.getModel();
            txtId.setText(((Long)model.getValueAt(row, 0)).toString());
            setCmbCategory(((Master)model.getValueAt(row, 1)).getId());
            setCmbCode(((Master)model.getValueAt(row, 2)).getId());
            txtVendorCode.setText((String)model.getValueAt(row, 3));
            txtLeadTime.setText(((Integer)model.getValueAt(row, 4)).toString());
            txtAddlCost.setText(((Float)model.getValueAt(row, 5)).toString());
            dtpFrom.setDate(new Date(((Timestamp)model.getValueAt(row, 6)).getTime()));
            dtpTo.setDate(new Date(((Timestamp)model.getValueAt(row, 7)).getTime()));
            txtNotes.setText((String)model.getValueAt(row, 8));
        }
    }
    
    public void updateRow(){
        int row = tblTable.getSelectedRow();
        tblTable.setValueAt(new Long(txtId.getText()), row, 0);
        tblTable.setValueAt((Master)cmbCategory.getSelectedItem(), row, 1);
        tblTable.setValueAt((Master)cmbCode.getSelectedItem(), row, 2);
        tblTable.setValueAt(txtVendorCode.getText(), row, 3);
        tblTable.setValueAt(Integer.parseInt(txtLeadTime.getText()), row, 4);
        tblTable.setValueAt(Float.parseFloat(txtAddlCost.getText()), row, 5);
        tblTable.setValueAt(new Timestamp(dtpFrom.getDate().getTime()), row, 6);
        tblTable.setValueAt(new Timestamp(dtpTo.getDate().getTime()), row, 7);
        tblTable.setValueAt(txtNotes.getText(), row, 8);
    }
    
    private void setCmbCategory(Long id){
        int index = -1;
        Master obj;
        for (int i=0;i<cmbCategory.getItemCount() && index == -1;i++){
            obj = (Master)cmbCategory.getItemAt(i);
            if (obj.getId().longValue() == id){
                index = i;
            }
        }
        cmbCategory.setSelectedIndex(index);
        cmbCategory.repaint();
    }

    private void setCmbCode(Long id){
        int index = -1;
        Master obj;
        for (int i=0;i<cmbCode.getItemCount() && index == -1;i++){
            obj = (Master)cmbCode.getItemAt(i);
            if (obj.getId().longValue() == id){
                index = i;
            }
        }
        cmbCode.setSelectedIndex(index);
        cmbCode.repaint();
    }
    
    public void setDescription(String text){
        txtDescription.setText(text);
    }
    
    public JTable getTable(){
        return tblTable;
    }
    
    public Long getId(){
        return Long.parseLong(txtId.getText());
    }
    
    public JComboBox getCategory(){
        return cmbCategory;
    }
    
    public JComboBox getCode(){
        return cmbCode;
    }

    public String getVendorCode(){
        return txtVendorCode.getText();
    }
    
    public String getLeadTime(){
        return txtLeadTime.getText();
    }
    
    public String getAdditionalCost(){
        return txtAddlCost.getText();
    }

    public Timestamp getFrom(){
        return new Timestamp(dtpFrom.getDate().getTime());
    }

    public Timestamp getTo(){
        return new Timestamp(dtpTo.getDate().getTime());
    }
    
    public String getNotes(){
        return txtNotes.getText();
    }
    
    public JButton getBtnEdit(){
        return btnEdit;
    }
    
    public JButton getBtnDelete(){
        return btnDelete;
    }
    
    public Quotation getSelectedItem(){
        if (tblTable.getSelectedRow() > -1){
            int row = tblTable.getSelectedRow();
            return ((QuotationTableModel)tblTable.getModel()).getValue(row);
        } else {
            return null;
        }
    }
    
    public QuotationController getController(){
        return this.controller;
    }
    
    
}
