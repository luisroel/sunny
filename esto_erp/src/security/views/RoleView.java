/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package security.views;

import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JList;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableModel;
import security.controllers.RoleController;
import security.entities.Item;
import security.entities.Role;
import security.entities.Module;
import security.entities.User;
import security.entities.UserRight;
import security.models.RoleModuleTableModel;
import security.models.ModuleComboBoxModel;
import security.models.RoleModel;

/**
 *
 * @author Administrator
 */
public class RoleView extends javax.swing.JInternalFrame {

    private RoleController controller;
    private UserRight right;
    private User user;
    
    /**
     * Creates new form FrmRole
     * @param user
     * @param right
     */
    public RoleView(User user, UserRight right) {
        initComponents();
        localInit(user, right);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cmbStatus = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstRoles = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        btnNewD = new javax.swing.JButton();
        btnEditD = new javax.swing.JButton();
        btnDeleteD = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cmbObject = new javax.swing.JComboBox();
        chkIsCreate = new javax.swing.JCheckBox();
        chkIsUpdate = new javax.swing.JCheckBox();
        chkIsDelete = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDetail = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtRoleId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtRoleName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        chkIsActive = new javax.swing.JCheckBox();
        btnNew = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtModUser = new javax.swing.JTextField();
        txtEntryUser = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtModDate = new javax.swing.JTextField();
        txtEntryDate = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Roles");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter:"));

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Active", "Inactive" }));

        lstRoles.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstRoles);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cmbStatus, 0, 100, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Object rigths:"));

        btnNewD.setText("New");

        btnEditD.setText("Edit");

        btnDeleteD.setText("Delete");

        jLabel3.setText("Object:");

        cmbObject.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        chkIsCreate.setText("Create");

        chkIsUpdate.setText("Update");

        chkIsDelete.setText("Delete");

        tblDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tblDetail);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbObject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkIsCreate)
                        .addGap(10, 10, 10)
                        .addComponent(chkIsUpdate)
                        .addGap(10, 10, 10)
                        .addComponent(chkIsDelete))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNewD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeleteD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnNewD)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditD))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cmbObject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkIsCreate)
                            .addComponent(chkIsUpdate)
                            .addComponent(chkIsDelete)
                            .addComponent(btnDeleteD))))
                .addGap(70, 70, 70)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDeleteD, btnEditD, btnNewD});

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Role info:"));

        jLabel1.setText("Role Id:");

        txtRoleId.setEnabled(false);

        jLabel2.setText("Role Name:");

        jLabel8.setText("Description:");

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane4.setViewportView(txtDescription);

        chkIsActive.setText("Active");

        btnNew.setText("New");

        btnEdit.setText("Edit");

        btnDelete.setText("Delete");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8))
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtRoleId, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chkIsActive))
                    .addComponent(txtRoleName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, Short.MAX_VALUE)
                    .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtRoleId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(53, 53, 53))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(chkIsActive)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtRoleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnNew)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete)))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Changes info:"));

        jLabel4.setText("Entry User:");

        jLabel5.setText("Mod. User:");

        txtModUser.setEnabled(false);

        txtEntryUser.setEnabled(false);

        jLabel6.setText("Entry Date:");

        jLabel7.setText("Mod. Date:");

        txtModDate.setEnabled(false);

        txtEntryDate.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEntryDate))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(8, 8, 8)
                        .addComponent(txtEntryUser, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtModUser, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(txtModDate))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEntryUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtModUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEntryDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(txtModDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteD;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEditD;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNewD;
    private javax.swing.JCheckBox chkIsActive;
    private javax.swing.JCheckBox chkIsCreate;
    private javax.swing.JCheckBox chkIsDelete;
    private javax.swing.JCheckBox chkIsUpdate;
    private javax.swing.JComboBox cmbObject;
    private javax.swing.JComboBox cmbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JList lstRoles;
    private javax.swing.JTable tblDetail;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtEntryDate;
    private javax.swing.JTextField txtEntryUser;
    private javax.swing.JTextField txtModDate;
    private javax.swing.JTextField txtModUser;
    private javax.swing.JTextField txtRoleId;
    private javax.swing.JTextField txtRoleName;
    // End of variables declaration//GEN-END:variables

    private void localInit(User user, UserRight right) {
        RoleModel model = new RoleModel();
        controller = new RoleController(model, this, user);
        this.right = right;
        this.user = user;
        
        cmbStatus.addItemListener(controller);
        lstRoles.addListSelectionListener(controller);
        btnNew.setActionCommand("New");
        btnNew.addActionListener(controller);
        btnEdit.setActionCommand("Edit");
        btnEdit.addActionListener(controller);
        btnDelete.setActionCommand("Delete");
        btnDelete.addActionListener(controller);
        
        tblDetail.getSelectionModel().addListSelectionListener(controller);
        tblDetail.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        cmbObject.setModel(new ModuleComboBoxModel(1));          // only active objects
        btnNewD.setActionCommand("NewD");
        btnNewD.addActionListener(controller);
        btnEditD.setActionCommand("EditD");
        btnEditD.addActionListener(controller);
        btnDeleteD.setActionCommand("DeleteD");
        btnDeleteD.addActionListener(controller);

        setNormalScenario();
        
        controller.loadStatus();
    }

    public void setNormalScenario() {
        cmbStatus.setEnabled(true);
        lstRoles.setEnabled(true);
        txtRoleName.setEnabled(false);
        txtDescription.setEnabled(false);
        chkIsActive.setEnabled(false);
        tblDetail.setEnabled(true);
        cmbObject.setEnabled(false);
        chkIsCreate.setEnabled(false);
        chkIsUpdate.setEnabled(false);
        chkIsDelete.setEnabled(false);
        btnNew.setEnabled(right.getIsCreated());
        
        if (lstRoles.getModel().getSize() > 0) {
            btnEdit.setEnabled(right.getIsUpdated());
            btnDelete.setEnabled(right.getIsDeleted());
            btnNewD.setEnabled(right.getIsCreated());
        } else {
            btnEdit.setEnabled(false);
            btnDelete.setEnabled(false);
            btnNewD.setEnabled(false);
        }
            
        if (tblDetail.getModel().getRowCount() > 0){
            btnEditD.setEnabled(right.getIsUpdated());
            btnDeleteD.setEnabled(right.getIsDeleted());
        } else {
            btnEditD.setEnabled(false);
            btnDeleteD.setEnabled(false);
        }
        
        btnNew.setText("New");
        btnEdit.setText("Edit");
        
        btnNewD.setText("New");
        btnEditD.setText("Edit");
        
        controller.setViewState(0);
    }
    
    public void setNewScenario() {
        cmbStatus.setEnabled(false);
        lstRoles.setEnabled(false);
        txtRoleName.setEnabled(true);
        txtDescription.setEnabled(true);
        chkIsActive.setEnabled(false);
        tblDetail.setEnabled(false);
        cmbObject.setEnabled(false);
        chkIsCreate.setEnabled(false);
        chkIsUpdate.setEnabled(false);
        chkIsDelete.setEnabled(false);
        
        btnNew.setEnabled(true);
        btnEdit.setEnabled(true);
        btnDelete.setEnabled(false);
        btnNewD.setEnabled(false);
        btnEditD.setEnabled(false);
        btnDeleteD.setEnabled(false);
        
        btnNew.setText("Save");
        btnEdit.setText("Cancel");
        
        initFields();
        
        controller.setViewState(1);
    }
    
    public void setEditScenario(){
        cmbStatus.setEnabled(false);
        lstRoles.setEnabled(false);
        txtRoleName.setEnabled(true);
        txtDescription.setEnabled(true);
        chkIsActive.setEnabled(true);
        tblDetail.setEnabled(false);
        cmbObject.setEnabled(false);
        chkIsCreate.setEnabled(false);
        chkIsUpdate.setEnabled(false);
        chkIsDelete.setEnabled(false);
        
        btnNew.setEnabled(true);
        btnEdit.setEnabled(true);
        btnDelete.setEnabled(false);
        btnNewD.setEnabled(false);
        btnEditD.setEnabled(false);
        btnDeleteD.setEnabled(false);
        
        btnNew.setText("Save");
        btnEdit.setText("Cancel");

       controller.setViewState(2);
    }

    public void clearFields(){
        txtRoleId.setText("");
        txtRoleName.setText("");
        txtDescription.setText("");
        chkIsActive.setSelected(false);
        txtEntryUser.setText("");
        txtEntryDate.setText("");
        txtModUser.setText("");
        txtModDate.setText("");
        cmbObject.setSelectedIndex(-1);
        chkIsCreate.setSelected(false);
        chkIsUpdate.setSelected(false);
        chkIsDelete.setSelected(false);
    }
    
    public void loadDetail() {
        if (lstRoles.getSelectedIndex() != -1){
            Role obj = (Role)lstRoles.getSelectedValue();
            txtRoleId.setText(Long.toString(obj.getId()));
            txtRoleName.setText(obj.getName());
            txtDescription.setText(obj.getDescription());
            chkIsActive.setSelected(obj.getIsActive());
            txtEntryUser.setText(obj.getTrack().getEntryUser().getName());
            txtEntryDate.setText(new SimpleDateFormat("MM/dd/yyyy hh:mm:ss").format(obj.getTrack().getEntryDate()));
            txtModUser.setText(obj.getTrack().getModUser().getName());
            txtModDate.setText(new SimpleDateFormat("MM/dd/yyyy hh:mm:ss").format(obj.getTrack().getModDate()));
            btnNewD.setEnabled(right.getIsCreated());
            btnEdit.setEnabled(right.getIsUpdated());
            btnDelete.setEnabled(right.getIsDeleted());

            loadTableDetail(obj.getId());
        }  else{
            clearFields();
            
            btnEdit.setEnabled(false);
            btnDelete.setEnabled(false);
            btnNewD.setEnabled(false);
            btnEditD.setEnabled(false);
            btnDeleteD.setEnabled(false);
        }
    }
    
    public void updateRow(){
        if (lstRoles.getSelectedIndex() != -1){
            Date date = new Date();
            Role obj = (Role)lstRoles.getSelectedValue();
            obj.setName(txtRoleName.getText());
            obj.setDescription(txtDescription.getText());
            obj.setIsActive(chkIsActive.isSelected());
            obj.getTrack().setModDate(new Timestamp(date.getTime()));
            obj.getTrack().setModUser(new Item(user.getUserId(),user.getUsername()));
        }
    }
    
    public JComboBox getCmbStatus(){
        return cmbStatus;
    }
    
    public JList getRoleList(){
        return lstRoles;
    }
    
    public Long getRoleId(){
        return Long.parseLong(txtRoleId.getText());
    }
    
    public String getRoleName(){
        return txtRoleName.getText();
    }
    
    public String getRoleDescription(){
        return txtDescription.getText();
    }
    
    public boolean getIsActive(){
        return chkIsActive.isSelected();
    }
    
    /*****************************     DETAIL  ****************************/
    
    public void setNewScenarioD() {
        cmbStatus.setEnabled(false);
        lstRoles.setEnabled(false);
        txtRoleName.setEnabled(false);
        txtDescription.setEnabled(false);
        chkIsActive.setEnabled(false);
        tblDetail.setEnabled(false);
        cmbObject.setEnabled(true);
        chkIsCreate.setEnabled(true);
        chkIsUpdate.setEnabled(true);
        chkIsDelete.setEnabled(true);
        
        btnNew.setEnabled(false);
        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);
        btnNewD.setEnabled(true);
        btnEditD.setEnabled(true);
        btnDeleteD.setEnabled(false);
        
        btnNewD.setText("Save");
        btnEditD.setText("Cancel");
        
        initFieldsD();
        
       controller.setViewState(1);
    }

    public void setEditScenarioD(){
        cmbStatus.setEnabled(false);
        lstRoles.setEnabled(false);
        txtRoleName.setEnabled(false);
        txtDescription.setEnabled(false);
        chkIsActive.setEnabled(false);
        tblDetail.setEnabled(false);
        cmbObject.setEnabled(false);
        chkIsCreate.setEnabled(true);
        chkIsUpdate.setEnabled(true);
        chkIsDelete.setEnabled(true);
        
        btnNew.setEnabled(false);
        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);
        btnNewD.setEnabled(true);
        btnEditD.setEnabled(true);
        btnDeleteD.setEnabled(false);
        
        btnNewD.setText("Save");
        btnEditD.setText("Cancel");

        controller.setViewState(2);
    }
    
    public void initFieldsD(){
        cmbObject.setSelectedIndex(-1);
        cmbObject.repaint();
        chkIsCreate.setSelected(false);
        chkIsUpdate.setSelected(false);
        chkIsDelete.setSelected(false);
    }
    
    public void loadRoleDetail(){
        TableModel tableModel = tblDetail.getModel();
        if (tblDetail.getSelectedRow() != -1){
            Item item = (Item)tableModel.getValueAt(tblDetail.getSelectedRow(), 0);
            setCmbObject(item.getId());
            chkIsCreate.setSelected((Boolean)tableModel.getValueAt(tblDetail.getSelectedRow(), 1));
            chkIsUpdate.setSelected((Boolean)tableModel.getValueAt(tblDetail.getSelectedRow(), 2));
            chkIsDelete.setSelected((Boolean)tableModel.getValueAt(tblDetail.getSelectedRow(), 3));
            btnEditD.setEnabled(right.getIsUpdated());
            btnDeleteD.setEnabled(right.getIsDeleted());
        } else {
            clearRoleDetail();
            btnEditD.setEnabled(false);
            btnDeleteD.setEnabled(false);
        }       
    }
    
    public void updateRowD(){
        Module item = (Module)cmbObject.getSelectedItem();
        Date date = new Date();
        tblDetail.setValueAt(new Item(item.getId(),item.getName()), tblDetail.getSelectedRow(), 0);
        tblDetail.setValueAt(chkIsCreate.isSelected(), tblDetail.getSelectedRow(), 1);
        tblDetail.setValueAt(chkIsUpdate.isSelected(), tblDetail.getSelectedRow(), 2);
        tblDetail.setValueAt(chkIsDelete.isSelected(), tblDetail.getSelectedRow(), 3);
        txtModUser.setText(user.getUsername());
        txtModDate.setText(new SimpleDateFormat("MM/dd/yyyy hh:mm:ss").format(date));
        Role obj = (Role)lstRoles.getSelectedValue();
        obj.getTrack().setModDate(new Timestamp(date.getTime()));
        obj.getTrack().setModUser(new Item(user.getUserId(),user.getUsername()));
    }
    
    public void loadTableDetail(long roleId) {
        tblDetail.setModel(new RoleModuleTableModel(controller.getModel().getListModules(roleId)));
        TableModel tableModel = tblDetail.getModel();
        
        if (tableModel.getRowCount() > 0){
            tblDetail.setRowSelectionInterval(0, 0);
        } else {
            btnEditD.setEnabled(false);
            btnDeleteD.setEnabled(false);
        }
    }    
    
    public void setCmbObject(Long roleId){
        int index = -1;
        Module obj;
        for (int i=0;i<cmbObject.getItemCount() && index == -1;i++){
            obj = (Module)cmbObject.getItemAt(i);
            if (obj.getId()== roleId){
                index = i;
            }
        }
        cmbObject.setSelectedIndex(index);
        cmbObject.repaint();
    }

    public void clearRoleDetail(){
        cmbObject.setSelectedIndex(-1);
        cmbObject.repaint();
        chkIsCreate.setSelected(false);
        chkIsUpdate.setSelected(false);
        chkIsDelete.setSelected(false);
    }
    
    public void initFields(){
        txtRoleName.setText("");
        txtDescription.setText("");
        chkIsActive.setSelected(true);
        loadTableDetail(-1);
        cmbObject.setSelectedIndex(-1);
        cmbObject.repaint();
        chkIsCreate.setSelected(false);
        chkIsUpdate.setSelected(false);
        chkIsDelete.setSelected(false);
    }

    public JTable getTableDetail(){
        return tblDetail;
    }

    public JComboBox getCmbObject(){
        return cmbObject;
    }

    public boolean getIsCreate(){
        return chkIsCreate.isSelected();
    }

    public boolean getIsUpdate(){
        return chkIsUpdate.isSelected();
    }

    public boolean getIsDelete(){
        return chkIsDelete.isSelected();
    }

}
