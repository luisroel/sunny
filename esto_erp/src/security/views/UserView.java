/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package security.views;

import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JList;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableModel;
import security.controllers.UserController;
import security.entities.Item;
import security.entities.Module;
import security.entities.User;
import security.entities.UserRight;
import security.models.ItemListModel;
import security.models.ModuleComboBoxModel;
import security.models.UserModel;
import security.models.UserModuleTableModel;

/**
 *
 * @author Administrator
 */
public class UserView extends javax.swing.JInternalFrame {

    private UserController controller;
    private UserRight right;
    private User user;
    
    /**
     * Creates new form FrmUsers
     * @param user
     * @param right
     */
    public UserView(User user, UserRight right) {
        initComponents();
        localInit(user, right);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cmbStatus = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstUsers = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtEntryUser = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtEntryDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtModUser = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtModDate = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btnNewD = new javax.swing.JButton();
        btnEditD = new javax.swing.JButton();
        btnDeleteD = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        cmbObject = new javax.swing.JComboBox();
        chkIsCreate = new javax.swing.JCheckBox();
        chkIsDelete = new javax.swing.JCheckBox();
        chkIsUpdate = new javax.swing.JCheckBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblObjects = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtUserId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        chkIsActive = new javax.swing.JCheckBox();
        btnNew = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstAvailableRoles = new javax.swing.JList();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstAssignedRoles = new javax.swing.JList();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Users");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter:"));

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Inactive" }));

        jScrollPane1.setViewportView(lstUsers);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cmbStatus, 0, 187, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Changes info:"));

        jLabel4.setText("Entry User:");

        txtEntryUser.setEnabled(false);

        jLabel6.setText("Entry Date:");

        txtEntryDate.setEnabled(false);

        jLabel5.setText("Mod. User:");

        txtModUser.setEnabled(false);

        jLabel7.setText("Mod. Date:");

        txtModDate.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEntryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEntryUser, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(133, 133, 133)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtModUser, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModDate, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtEntryDate, txtEntryUser, txtModDate, txtModUser});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEntryUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtModUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEntryDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtModDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Object rights:"));

        btnNewD.setText("New");

        btnEditD.setText("Edit");

        btnDeleteD.setText("Delete");

        jLabel8.setText("Object:");

        cmbObject.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        chkIsCreate.setText("Create");

        chkIsDelete.setText("Delete");

        chkIsUpdate.setText("Update");

        tblObjects.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(tblObjects);

        jScrollPane5.setViewportView(jScrollPane4);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbObject, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chkIsCreate)
                        .addGap(26, 26, 26)
                        .addComponent(chkIsUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(chkIsDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEditD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeleteD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                    .addComponent(btnNewD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnNewD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditD))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteD)
                    .addComponent(jLabel8)
                    .addComponent(cmbObject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkIsCreate)
                    .addComponent(chkIsUpdate)
                    .addComponent(chkIsDelete))
                .addGap(7, 7, 7))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("User info:"));

        jLabel1.setText("User Id:");

        txtUserId.setEnabled(false);

        jLabel2.setText("Username:");

        txtUsername.setEnabled(false);

        jLabel3.setText("Password:");

        chkIsActive.setText("Is Active");
        chkIsActive.setEnabled(false);

        btnNew.setText("New");

        btnEdit.setText("Edit");

        btnDelete.setText("Delete");

        txtPassword.setText("jPasswordField1");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                            .addComponent(txtUsername)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(chkIsActive)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(btnNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEdit)
                        .addGap(29, 29, 29)
                        .addComponent(btnDelete)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chkIsActive)
                        .addContainerGap())))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Roles")));

        lstAvailableRoles.setEnabled(false);
        jScrollPane2.setViewportView(lstAvailableRoles);

        btnAdd.setText(">");
        btnAdd.setEnabled(false);

        btnRemove.setText("<");
        btnRemove.setEnabled(false);

        btnSave.setText("Save");
        btnSave.setEnabled(false);

        lstAssignedRoles.setEnabled(false);
        jScrollPane3.setViewportView(lstAssignedRoles);

        jLabel9.setText("Available:");

        jLabel10.setText("Assigned:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(16, 16, 16)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4))))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnRemove, btnSave});

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane2, jScrollPane3});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRemove)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSave))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteD;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEditD;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNewD;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox chkIsActive;
    private javax.swing.JCheckBox chkIsCreate;
    private javax.swing.JCheckBox chkIsDelete;
    private javax.swing.JCheckBox chkIsUpdate;
    private javax.swing.JComboBox cmbObject;
    private javax.swing.JComboBox cmbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JList lstAssignedRoles;
    private javax.swing.JList lstAvailableRoles;
    private javax.swing.JList lstUsers;
    private javax.swing.JTable tblObjects;
    private javax.swing.JTextField txtEntryDate;
    private javax.swing.JTextField txtEntryUser;
    private javax.swing.JTextField txtModDate;
    private javax.swing.JTextField txtModUser;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserId;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
    
    private void localInit(User user, UserRight right){
        UserModel model = new UserModel();
        controller = new UserController(model, this, user);
        this.right = right;
        this.user = user;

        cmbStatus.addItemListener(controller);
        lstUsers.addListSelectionListener(controller);
        btnNew.setActionCommand("New");
        btnNew.addActionListener(controller);
        btnEdit.setActionCommand("Edit");
        btnEdit.addActionListener(controller);
        btnDelete.setActionCommand("Delete");
        btnDelete.addActionListener(controller);
        
        lstAvailableRoles.setModel(new ItemListModel(model.getAvailableRoles(0)));
        lstAssignedRoles.setModel(new ItemListModel(model.getAssignedRoles(0)));

        btnAdd.setActionCommand("Add");
        btnAdd.addActionListener(controller);
        btnRemove.setActionCommand("Remove");
        btnRemove.addActionListener(controller);
        btnSave.setActionCommand("Save");
        btnSave.addActionListener(controller);
        
        tblObjects.getSelectionModel().addListSelectionListener(controller);
        tblObjects.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        cmbObject.setModel(new ModuleComboBoxModel(1));          // only active objects
        btnNewD.setActionCommand("NewD");
        btnNewD.addActionListener(controller);
        btnEditD.setActionCommand("EditD");
        btnEditD.addActionListener(controller);
        btnDeleteD.setActionCommand("DeleteD");
        btnDeleteD.addActionListener(controller);
        
        setNormalScenario();
        
        controller.loadStatus();
    }
    
    public void setNormalScenario(){
        cmbStatus.setEnabled(true);
        lstUsers.setEnabled(true);

        txtUsername.setEnabled(false);
        txtPassword.setEnabled(false);
        chkIsActive.setEnabled(false);
        btnNew.setEnabled(right.getIsCreated());
        if (lstUsers.getModel().getSize()>0) {
            btnEdit.setEnabled(right.getIsUpdated());
            btnDelete.setEnabled(right.getIsDeleted());
            btnNewD.setEnabled(right.getIsCreated());
        } else {
            btnEdit.setEnabled(false);
            btnDelete.setEnabled(false);
            btnNewD.setEnabled(false);
        }

        lstAvailableRoles.setEnabled(true);
        ItemListModel modelA = (ItemListModel)lstAvailableRoles.getModel();
        if (modelA.getSize() > 0) {
            btnAdd.setEnabled(right.getIsCreated());
        } else {
            btnAdd.setEnabled(false);
        }
        
        lstAssignedRoles.setEnabled(true);
        ItemListModel modelB = (ItemListModel)lstAssignedRoles.getModel();
        if (modelB.getSize()>0) {
            btnRemove.setEnabled(right.getIsDeleted());
        } else {
            btnRemove.setEnabled(false);
        }
        btnSave.setEnabled(controller.getSave());
     
        tblObjects.setEnabled(true);
        if (tblObjects.getModel().getRowCount()>0){
            btnEditD.setEnabled(right.getIsUpdated());
            btnDeleteD.setEnabled(right.getIsDeleted());
        } else {
            btnEditD.setEnabled(false);
            btnDeleteD.setEnabled(false);            
        }
        cmbObject.setEnabled(false);
        chkIsCreate.setEnabled(false);
        chkIsUpdate.setEnabled(false);
        chkIsDelete.setEnabled(false);
        
        btnNew.setText("New");
        btnEdit.setText("Edit");
        
        btnNewD.setText("New");
        btnEditD.setText("Edit");
        
        controller.setViewState(0);
    }
    
    public void setNewScenario() {
        cmbStatus.setEnabled(false);
        lstUsers.setEnabled(false);
        txtUsername.setEnabled(true);
        txtPassword.setEnabled(true);
        chkIsActive.setEnabled(false);
        tblObjects.setEnabled(false);
        
        cmbObject.setEnabled(false);
        chkIsCreate.setEnabled(false);
        chkIsUpdate.setEnabled(false);
        chkIsDelete.setEnabled(false);
        
        btnNew.setEnabled(true);
        btnEdit.setEnabled(true);
        btnDelete.setEnabled(false);
        btnNewD.setEnabled(false);
        btnEditD.setEnabled(false);
        btnDeleteD.setEnabled(false);
        
        btnNew.setText("Save");
        btnEdit.setText("Cancel");
        
        initFields();
        
        controller.setViewState(1);
    }
    
    public void setEditScenario(){
        cmbStatus.setEnabled(false);
        lstUsers.setEnabled(false);
        txtUsername.setEnabled(true);
        txtPassword.setEnabled(true);
        chkIsActive.setEnabled(true);
        
        lstAvailableRoles.setEnabled(false);
        btnAdd.setEnabled(false);
        btnRemove.setEnabled(false);
        btnSave.setEnabled(false);
        lstAssignedRoles.setEnabled(false);
        
        tblObjects.setEnabled(false);
        cmbObject.setEnabled(false);
        chkIsCreate.setEnabled(false);
        chkIsUpdate.setEnabled(false);
        chkIsDelete.setEnabled(false);
        
        btnNew.setEnabled(true);
        btnEdit.setEnabled(true);
        btnDelete.setEnabled(false);
        btnNewD.setEnabled(false);
        btnEditD.setEnabled(false);
        btnDeleteD.setEnabled(false);
        
        btnNew.setText("Save");
        btnEdit.setText("Cancel");

        controller.setViewState(2);
    }
    
    public void clearFields(){
        txtUserId.setText("");
        txtUsername.setText("");
        txtPassword.setText("");
        chkIsActive.setSelected(false);

        ItemListModel modelA = (ItemListModel)lstAvailableRoles.getModel();
        ItemListModel modelB = (ItemListModel)lstAssignedRoles.getModel();
        modelA.clear();
        modelB.clear();
        
        controller.setSave(false);
        btnSave.setEnabled(false);
        
        btnAdd.setEnabled(false);
        btnRemove.setEnabled(false);
        tblObjects.setModel(new UserModuleTableModel(controller.getModel().getListModules(0)));
        
        txtEntryUser.setText("");
        txtEntryDate.setText("");
        txtModUser.setText("");
        txtModDate.setText("");
    }
    
    public void loadDetail() {
        if (lstUsers.getSelectedIndex() != -1){
            User obj = (User)lstUsers.getSelectedValue();
            txtUserId.setText(Long.toString(obj.getUserId()));
            txtUsername.setText(obj.getUsername());
            txtPassword.setText(Arrays.toString(obj.getPassword()));
            chkIsActive.setSelected(obj.getIsActive());
            txtEntryUser.setText(obj.getTrack().getEntryUser().getName());
            txtEntryDate.setText(new SimpleDateFormat("MM/dd/yyyy hh:mm:ss").format(obj.getTrack().getEntryDate()));
            txtModUser.setText(obj.getTrack().getModUser().getName());
            txtModDate.setText(new SimpleDateFormat("MM/dd/yyyy hh:mm:ss").format(obj.getTrack().getModDate()));
            btnNewD.setEnabled(right.getIsCreated());
            btnEdit.setEnabled(right.getIsUpdated());
            btnDelete.setEnabled(right.getIsDeleted());
            
            lstAvailableRoles.setModel(new ItemListModel(controller.getModel().getAvailableRoles(obj.getUserId())));
            lstAssignedRoles.setModel(new ItemListModel(controller.getModel().getAssignedRoles(obj.getUserId())));

            ItemListModel modelA = (ItemListModel)lstAvailableRoles.getModel();
            if (modelA.getSize() > 0){
                btnAdd.setEnabled(right.getIsCreated());
            } else{
                btnAdd.setEnabled(false);
            }

            ItemListModel modelB = (ItemListModel)lstAssignedRoles.getModel();
            if (modelB.getSize()>0){
                btnRemove.setEnabled(right.getIsDeleted());
            } else {
                btnRemove.setEnabled(false);
            }
            controller.setSave(false);
            btnSave.setEnabled(false);

            loadTableDetail(obj.getUserId());
        }  else{
            clearFields();
            
            btnEdit.setEnabled(false);
            btnDelete.setEnabled(false);
            btnNewD.setEnabled(false);
            btnEditD.setEnabled(false);
            btnDeleteD.setEnabled(false);
        }
    }
    
    public void updateRow(){
        if (lstUsers.getSelectedIndex() != -1){
            Date date = new Date();
            User obj = (User)lstUsers.getSelectedValue();
            txtUserId.setText(Long.toString(obj.getUserId()));
            obj.setUsername(txtUsername.getText());
            obj.setPassword(txtPassword.getPassword());
            obj.setIsActive(chkIsActive.isSelected());
            obj.getTrack().setModDate(new Timestamp(date.getTime()));
            obj.getTrack().setModUser(new Item(user.getUserId(), user.getUsername()));
        }
    }
    
    public JComboBox getCmbStatus(){
        return cmbStatus;
    }
    
    public JList getUserList(){
        return lstUsers;
    }
    
    public Long getUserId(){
        return Long.parseLong(txtUserId.getText());
    }
    
    public String getUsername(){
        return txtUsername.getText();
    }
    
    public char[] getPassword(){
        return txtPassword.getPassword();
    }
    
    public boolean getIsActive(){
        return chkIsActive.isSelected();
    }
    
    /*****************************     DETAIL  ****************************/
    
    public JList getLstAvailableRoles(){
        return lstAvailableRoles;
    }
    
    public JList getLstAssignedRoles(){
        return lstAssignedRoles;
    }
    
    public boolean isLstAvailableRolesEmpty(){
        return lstAvailableRoles.getModel().getSize() <= 0;
    }
    
    public void setRefreshRolesButtons(){
        btnSave.setEnabled(controller.getSave());
        int available = lstAvailableRoles.getModel().getSize();
        if (available==0) {
            btnAdd.setEnabled(false);
        }
        if (available == 1) {
            btnAdd.setEnabled(true);
        }
        int assigned = lstAssignedRoles.getModel().getSize();
        if (assigned==0){
            btnRemove.setEnabled(false);
        }
        if (assigned==1){
            btnRemove.setEnabled(true);
        }
    }
    
    /*****************************     DETAIL  ****************************/
    
    public void setNewScenarioD() {
        cmbStatus.setEnabled(false);
        lstUsers.setEnabled(false);
        txtUsername.setEnabled(false);
        txtPassword.setEnabled(false);
        chkIsActive.setEnabled(false);
        tblObjects.setEnabled(false);
        cmbObject.setEnabled(true);
        chkIsCreate.setEnabled(true);
        chkIsUpdate.setEnabled(true);
        chkIsDelete.setEnabled(true);
        
        lstAvailableRoles.setEnabled(false);
        btnAdd.setEnabled(false);
        btnRemove.setEnabled(false);
        btnSave.setEnabled(false);
        lstAssignedRoles.setEnabled(false);

        btnNew.setEnabled(false);
        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);
        btnNewD.setEnabled(true);
        btnEditD.setEnabled(true);
        btnDeleteD.setEnabled(false);
        
        btnNewD.setText("Save");
        btnEditD.setText("Cancel");
        
        initFieldsD();
        
        controller.setViewState(1);
    }
    
    public void setEditScenarioD(){
        cmbStatus.setEnabled(false);
        lstUsers.setEnabled(false);
        txtUsername.setEnabled(false);
        txtPassword.setEnabled(false);
        chkIsActive.setEnabled(false);
        tblObjects.setEnabled(false);
        cmbObject.setEnabled(false);
        chkIsCreate.setEnabled(true);
        chkIsUpdate.setEnabled(true);
        chkIsDelete.setEnabled(true);

        lstAvailableRoles.setEnabled(false);
        btnAdd.setEnabled(false);
        btnRemove.setEnabled(false);
        btnSave.setEnabled(false);
        lstAssignedRoles.setEnabled(false);

        btnNew.setEnabled(false);
        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);
        btnNewD.setEnabled(true);
        btnEditD.setEnabled(true);
        btnDeleteD.setEnabled(false);
        
        btnNewD.setText("Save");
        btnEditD.setText("Cancel");

        controller.setViewState(2);
    }    
    
    public void initFieldsD(){
        cmbObject.setSelectedIndex(-1);
        cmbObject.repaint();
        chkIsCreate.setSelected(false);
        chkIsUpdate.setSelected(false);
        chkIsDelete.setSelected(false);
    }
    
    public void loadRoleDetail(){
        TableModel tableModel = tblObjects.getModel();
        if (tblObjects.getSelectedRow() != -1){
            Item item = (Item)tableModel.getValueAt(tblObjects.getSelectedRow(), 0);
            setCmbObject(item.getId());
            chkIsCreate.setSelected((Boolean)tableModel.getValueAt(tblObjects.getSelectedRow(), 1));
            chkIsUpdate.setSelected((Boolean)tableModel.getValueAt(tblObjects.getSelectedRow(), 2));
            chkIsDelete.setSelected((Boolean)tableModel.getValueAt(tblObjects.getSelectedRow(), 3));
            btnEditD.setEnabled(right.getIsUpdated());
            btnDeleteD.setEnabled(right.getIsDeleted());
        } else {
            clearRoleDetail();
            btnEditD.setEnabled(false);
            btnDeleteD.setEnabled(false);
        }       
    }
    
    public void updateRowD(){
        Module item = (Module)cmbObject.getSelectedItem();
        Date date = new Date();
        tblObjects.setValueAt(new Item(item.getId(),item.getName()), tblObjects.getSelectedRow(), 0);
        tblObjects.setValueAt(chkIsCreate.isSelected(), tblObjects.getSelectedRow(), 1);
        tblObjects.setValueAt(chkIsUpdate.isSelected(), tblObjects.getSelectedRow(), 2);
        tblObjects.setValueAt(chkIsDelete.isSelected(), tblObjects.getSelectedRow(), 3);
        txtModUser.setText(user.getUsername());
        txtModDate.setText(new SimpleDateFormat("MM/dd/yyyy hh:mm:ss").format(date));
        User obj = (User)lstUsers.getSelectedValue();
        obj.getTrack().setModDate(new Timestamp(date.getTime()));
        obj.getTrack().setModUser(new Item(user.getUserId(),user.getUsername()));
    }
    
    
    public void loadTableDetail(Long userId) {
        tblObjects.setModel(new UserModuleTableModel(controller.getModel().getListModules(userId)));
        TableModel tableModel = tblObjects.getModel();
        
        if (tableModel.getRowCount() > 0){
            tblObjects.setRowSelectionInterval(0, 0);
        } else {
            btnEditD.setEnabled(false);
            btnDeleteD.setEnabled(false);
        }
    }
   
    private void setCmbObject(Long roleId){
        int index = -1;
        Module obj;
        for (int i=0;i<cmbObject.getItemCount() && index == -1;i++){
            obj = (Module)cmbObject.getItemAt(i);
            if (obj.getId()== roleId){
                index = i;
            }
        }
        cmbObject.setSelectedIndex(index);
        cmbObject.repaint();
    }
    
    private void clearRoleDetail(){
        cmbObject.setSelectedIndex(-1);
        cmbObject.repaint();
        chkIsCreate.setSelected(false);
        chkIsUpdate.setSelected(false);
        chkIsDelete.setSelected(false);
    }

    private void initFields(){
        txtUsername.setText("");
        txtPassword.setText("");
        chkIsActive.setSelected(true);
        loadTableDetail(new Long(-1));
        cmbObject.setSelectedIndex(-1);
        cmbObject.repaint();
        chkIsCreate.setSelected(false);
        chkIsUpdate.setSelected(false);
        chkIsDelete.setSelected(false);
    }
    

    public JTable getTableObjects(){
        return tblObjects;
    }

    public JComboBox getCmbObject(){
        return cmbObject;
    }

    public boolean getIsCreate(){
        return chkIsCreate.isSelected();
    }

    public boolean getIsUpdate(){
        return chkIsUpdate.isSelected();
    }

    public boolean getIsDelete(){
        return chkIsDelete.isSelected();
    }

}
