/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.container;

import erp.controllers.QuotationController;
import erp.controllers.RangeController;
import erp.entities.Master;
import erp.entities.Quotation;
import erp.models.SubmaterialComboBoxModel;
import erp.views.QuotationView;
import erp.views.RangeView;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import security.entities.User;
import security.entities.UserRight;

/**
 *
 * @author lespinoza
 */
public class QuotationContainer extends javax.swing.JPanel implements ListSelectionListener, ActionListener {
    private QuotationView quotationView;
    private RangeView costView;
    
    /**
     * Creates new form QuotationContainer
     * @param user
     * @param right
     * @param itemKey
     */
    public QuotationContainer(User user, UserRight right, Long itemKey) {
        initComponents();
        localInit(user, right, itemKey);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlList = new javax.swing.JPanel();
        pnlCosts = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbCodes = new javax.swing.JComboBox();
        txtDescription = new javax.swing.JTextField();

        javax.swing.GroupLayout pnlListLayout = new javax.swing.GroupLayout(pnlList);
        pnlList.setLayout(pnlListLayout);
        pnlListLayout.setHorizontalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 433, Short.MAX_VALUE)
        );
        pnlListLayout.setVerticalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Quotes", pnlList);

        javax.swing.GroupLayout pnlCostsLayout = new javax.swing.GroupLayout(pnlCosts);
        pnlCosts.setLayout(pnlCostsLayout);
        pnlCostsLayout.setHorizontalGroup(
            pnlCostsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 433, Short.MAX_VALUE)
        );
        pnlCostsLayout.setVerticalGroup(
            pnlCostsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Costs", pnlCosts);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Category:");

        cmbCodes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtDescription.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbCodes, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescription)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbCodes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmbCodes, txtDescription});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbCodes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pnlCosts;
    private javax.swing.JPanel pnlList;
    private javax.swing.JTextField txtDescription;
    // End of variables declaration//GEN-END:variables

    private void localInit(User user, UserRight right, Long itemKey) {
       
        // load all quotation list for the itemKey provider
        this.quotationView = new QuotationView(user, right, itemKey, new Long(-1));
        this.pnlList.setLayout(new java.awt.BorderLayout());
        this.pnlList.add(quotationView);
        this.pnlList.revalidate();

        // load quotation cost if a quotation is selected
        Quotation selectedQuote;
        selectedQuote = quotationView.getSelectedItem();
        if (selectedQuote == null){
            costView = new RangeView(user, right, 1, new Long(-1));
        } else {
            costView = new RangeView(user, right, 1, selectedQuote.getId());
        }
        this.pnlCosts.setLayout(new java.awt.BorderLayout());
        this.pnlCosts.add(costView);
        this.pnlCosts.revalidate();
        
        // Load Submaterial list using quotes received from the current itemKey provider
        cmbCodes.setModel(new SubmaterialComboBoxModel(itemKey));
        
        // listen for a submaterial selection
        cmbCodes.addActionListener(this);
        
        // listen for quotation selection change
        quotationView.getController().addSelectionListener(this);
    }
    
    public void loadData(Long itemKey){
        // new provider selected, so "ALL" quotation list must be loaded using new
        // providerId
        QuotationController controller;
        controller = quotationView.getController();
        controller.setItem(itemKey);
        controller.loadData();
        
        // Load quoted submaterials list for local filtering
        cmbCodes.setModel(new SubmaterialComboBoxModel(itemKey));
    }
    
    @Override
    public void valueChanged(ListSelectionEvent lse) {
        // New quotation selected, so costs list must be loaded
        RangeController controller;
        controller = costView.getController();
        
        Quotation selectedQuotation;
        selectedQuotation = quotationView.getSelectedItem();
        
        if (selectedQuotation == null){
            controller.setItem(new Long(-1));
        } else {
            controller.setItem(selectedQuotation.getId());
        }
        controller.loadData();
    }

    @Override
    public void actionPerformed(ActionEvent ae) {
        // Submaterial has change, so quotation list must be loaded and
        // cost list must be loaded if a quotation row is selected
        
        if (cmbCodes.getSelectedIndex() > -1){
            QuotationController controller;
            controller = quotationView.getController();
            
            controller.setSubItem(((Master)cmbCodes.getSelectedItem()).getId());
            controller.loadData();
        }       
    }
}
